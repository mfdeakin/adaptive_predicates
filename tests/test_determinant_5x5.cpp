
#include <catch2/catch_test_macros.hpp>

#include "ae_expr.hpp"
#include "ae_fp_eval.hpp"
#include "ae_geom_exprs.hpp"

#include <random>
#include <tuple>
#include <type_traits>

using namespace adaptive_expr;

TEST_CASE("5x5 determinant expression", "[geom_exprs][determinant][5x5]") {
  const auto seed = std::random_device()();
  std::mt19937_64 rng(seed);
  std::uniform_real_distribution<double> entry_dist(-1.0, 1.0);
  for (int i = 0; i < 400; ++i) {
    std::array<std::array<double, 5>, 5> matrix;
    for (auto &row : matrix) {
      for (auto &entry : row) {
        entry = entry_dist(rng);
      }
    }
    // Generated by sympy
    const auto det_expr = mult_expr(matrix[0][0], matrix[1][1]) * matrix[2][2] *
                              matrix[3][3] * matrix[4][4] -
                          mult_expr(matrix[0][0], matrix[1][1]) * matrix[2][2] *
                              matrix[3][4] * matrix[4][3] -
                          mult_expr(matrix[0][0], matrix[1][1]) * matrix[2][3] *
                              matrix[3][2] * matrix[4][4] +
                          mult_expr(matrix[0][0], matrix[1][1]) * matrix[2][3] *
                              matrix[3][4] * matrix[4][2] +
                          mult_expr(matrix[0][0], matrix[1][1]) * matrix[2][4] *
                              matrix[3][2] * matrix[4][3] -
                          mult_expr(matrix[0][0], matrix[1][1]) * matrix[2][4] *
                              matrix[3][3] * matrix[4][2] -
                          mult_expr(matrix[0][0], matrix[1][2]) * matrix[2][1] *
                              matrix[3][3] * matrix[4][4] +
                          mult_expr(matrix[0][0], matrix[1][2]) * matrix[2][1] *
                              matrix[3][4] * matrix[4][3] +
                          mult_expr(matrix[0][0], matrix[1][2]) * matrix[2][3] *
                              matrix[3][1] * matrix[4][4] -
                          mult_expr(matrix[0][0], matrix[1][2]) * matrix[2][3] *
                              matrix[3][4] * matrix[4][1] -
                          mult_expr(matrix[0][0], matrix[1][2]) * matrix[2][4] *
                              matrix[3][1] * matrix[4][3] +
                          mult_expr(matrix[0][0], matrix[1][2]) * matrix[2][4] *
                              matrix[3][3] * matrix[4][1] +
                          mult_expr(matrix[0][0], matrix[1][3]) * matrix[2][1] *
                              matrix[3][2] * matrix[4][4] -
                          mult_expr(matrix[0][0], matrix[1][3]) * matrix[2][1] *
                              matrix[3][4] * matrix[4][2] -
                          mult_expr(matrix[0][0], matrix[1][3]) * matrix[2][2] *
                              matrix[3][1] * matrix[4][4] +
                          mult_expr(matrix[0][0], matrix[1][3]) * matrix[2][2] *
                              matrix[3][4] * matrix[4][1] +
                          mult_expr(matrix[0][0], matrix[1][3]) * matrix[2][4] *
                              matrix[3][1] * matrix[4][2] -
                          mult_expr(matrix[0][0], matrix[1][3]) * matrix[2][4] *
                              matrix[3][2] * matrix[4][1] -
                          mult_expr(matrix[0][0], matrix[1][4]) * matrix[2][1] *
                              matrix[3][2] * matrix[4][3] +
                          mult_expr(matrix[0][0], matrix[1][4]) * matrix[2][1] *
                              matrix[3][3] * matrix[4][2] +
                          mult_expr(matrix[0][0], matrix[1][4]) * matrix[2][2] *
                              matrix[3][1] * matrix[4][3] -
                          mult_expr(matrix[0][0], matrix[1][4]) * matrix[2][2] *
                              matrix[3][3] * matrix[4][1] -
                          mult_expr(matrix[0][0], matrix[1][4]) * matrix[2][3] *
                              matrix[3][1] * matrix[4][2] +
                          mult_expr(matrix[0][0], matrix[1][4]) * matrix[2][3] *
                              matrix[3][2] * matrix[4][1] -
                          mult_expr(matrix[0][1], matrix[1][0]) * matrix[2][2] *
                              matrix[3][3] * matrix[4][4] +
                          mult_expr(matrix[0][1], matrix[1][0]) * matrix[2][2] *
                              matrix[3][4] * matrix[4][3] +
                          mult_expr(matrix[0][1], matrix[1][0]) * matrix[2][3] *
                              matrix[3][2] * matrix[4][4] -
                          mult_expr(matrix[0][1], matrix[1][0]) * matrix[2][3] *
                              matrix[3][4] * matrix[4][2] -
                          mult_expr(matrix[0][1], matrix[1][0]) * matrix[2][4] *
                              matrix[3][2] * matrix[4][3] +
                          mult_expr(matrix[0][1], matrix[1][0]) * matrix[2][4] *
                              matrix[3][3] * matrix[4][2] +
                          mult_expr(matrix[0][1], matrix[1][2]) * matrix[2][0] *
                              matrix[3][3] * matrix[4][4] -
                          mult_expr(matrix[0][1], matrix[1][2]) * matrix[2][0] *
                              matrix[3][4] * matrix[4][3] -
                          mult_expr(matrix[0][1], matrix[1][2]) * matrix[2][3] *
                              matrix[3][0] * matrix[4][4] +
                          mult_expr(matrix[0][1], matrix[1][2]) * matrix[2][3] *
                              matrix[3][4] * matrix[4][0] +
                          mult_expr(matrix[0][1], matrix[1][2]) * matrix[2][4] *
                              matrix[3][0] * matrix[4][3] -
                          mult_expr(matrix[0][1], matrix[1][2]) * matrix[2][4] *
                              matrix[3][3] * matrix[4][0] -
                          mult_expr(matrix[0][1], matrix[1][3]) * matrix[2][0] *
                              matrix[3][2] * matrix[4][4] +
                          mult_expr(matrix[0][1], matrix[1][3]) * matrix[2][0] *
                              matrix[3][4] * matrix[4][2] +
                          mult_expr(matrix[0][1], matrix[1][3]) * matrix[2][2] *
                              matrix[3][0] * matrix[4][4] -
                          mult_expr(matrix[0][1], matrix[1][3]) * matrix[2][2] *
                              matrix[3][4] * matrix[4][0] -
                          mult_expr(matrix[0][1], matrix[1][3]) * matrix[2][4] *
                              matrix[3][0] * matrix[4][2] +
                          mult_expr(matrix[0][1], matrix[1][3]) * matrix[2][4] *
                              matrix[3][2] * matrix[4][0] +
                          mult_expr(matrix[0][1], matrix[1][4]) * matrix[2][0] *
                              matrix[3][2] * matrix[4][3] -
                          mult_expr(matrix[0][1], matrix[1][4]) * matrix[2][0] *
                              matrix[3][3] * matrix[4][2] -
                          mult_expr(matrix[0][1], matrix[1][4]) * matrix[2][2] *
                              matrix[3][0] * matrix[4][3] +
                          mult_expr(matrix[0][1], matrix[1][4]) * matrix[2][2] *
                              matrix[3][3] * matrix[4][0] +
                          mult_expr(matrix[0][1], matrix[1][4]) * matrix[2][3] *
                              matrix[3][0] * matrix[4][2] -
                          mult_expr(matrix[0][1], matrix[1][4]) * matrix[2][3] *
                              matrix[3][2] * matrix[4][0] +
                          mult_expr(matrix[0][2], matrix[1][0]) * matrix[2][1] *
                              matrix[3][3] * matrix[4][4] -
                          mult_expr(matrix[0][2], matrix[1][0]) * matrix[2][1] *
                              matrix[3][4] * matrix[4][3] -
                          mult_expr(matrix[0][2], matrix[1][0]) * matrix[2][3] *
                              matrix[3][1] * matrix[4][4] +
                          mult_expr(matrix[0][2], matrix[1][0]) * matrix[2][3] *
                              matrix[3][4] * matrix[4][1] +
                          mult_expr(matrix[0][2], matrix[1][0]) * matrix[2][4] *
                              matrix[3][1] * matrix[4][3] -
                          mult_expr(matrix[0][2], matrix[1][0]) * matrix[2][4] *
                              matrix[3][3] * matrix[4][1] -
                          mult_expr(matrix[0][2], matrix[1][1]) * matrix[2][0] *
                              matrix[3][3] * matrix[4][4] +
                          mult_expr(matrix[0][2], matrix[1][1]) * matrix[2][0] *
                              matrix[3][4] * matrix[4][3] +
                          mult_expr(matrix[0][2], matrix[1][1]) * matrix[2][3] *
                              matrix[3][0] * matrix[4][4] -
                          mult_expr(matrix[0][2], matrix[1][1]) * matrix[2][3] *
                              matrix[3][4] * matrix[4][0] -
                          mult_expr(matrix[0][2], matrix[1][1]) * matrix[2][4] *
                              matrix[3][0] * matrix[4][3] +
                          mult_expr(matrix[0][2], matrix[1][1]) * matrix[2][4] *
                              matrix[3][3] * matrix[4][0] +
                          mult_expr(matrix[0][2], matrix[1][3]) * matrix[2][0] *
                              matrix[3][1] * matrix[4][4] -
                          mult_expr(matrix[0][2], matrix[1][3]) * matrix[2][0] *
                              matrix[3][4] * matrix[4][1] -
                          mult_expr(matrix[0][2], matrix[1][3]) * matrix[2][1] *
                              matrix[3][0] * matrix[4][4] +
                          mult_expr(matrix[0][2], matrix[1][3]) * matrix[2][1] *
                              matrix[3][4] * matrix[4][0] +
                          mult_expr(matrix[0][2], matrix[1][3]) * matrix[2][4] *
                              matrix[3][0] * matrix[4][1] -
                          mult_expr(matrix[0][2], matrix[1][3]) * matrix[2][4] *
                              matrix[3][1] * matrix[4][0] -
                          mult_expr(matrix[0][2], matrix[1][4]) * matrix[2][0] *
                              matrix[3][1] * matrix[4][3] +
                          mult_expr(matrix[0][2], matrix[1][4]) * matrix[2][0] *
                              matrix[3][3] * matrix[4][1] +
                          mult_expr(matrix[0][2], matrix[1][4]) * matrix[2][1] *
                              matrix[3][0] * matrix[4][3] -
                          mult_expr(matrix[0][2], matrix[1][4]) * matrix[2][1] *
                              matrix[3][3] * matrix[4][0] -
                          mult_expr(matrix[0][2], matrix[1][4]) * matrix[2][3] *
                              matrix[3][0] * matrix[4][1] +
                          mult_expr(matrix[0][2], matrix[1][4]) * matrix[2][3] *
                              matrix[3][1] * matrix[4][0] -
                          mult_expr(matrix[0][3], matrix[1][0]) * matrix[2][1] *
                              matrix[3][2] * matrix[4][4] +
                          mult_expr(matrix[0][3], matrix[1][0]) * matrix[2][1] *
                              matrix[3][4] * matrix[4][2] +
                          mult_expr(matrix[0][3], matrix[1][0]) * matrix[2][2] *
                              matrix[3][1] * matrix[4][4] -
                          mult_expr(matrix[0][3], matrix[1][0]) * matrix[2][2] *
                              matrix[3][4] * matrix[4][1] -
                          mult_expr(matrix[0][3], matrix[1][0]) * matrix[2][4] *
                              matrix[3][1] * matrix[4][2] +
                          mult_expr(matrix[0][3], matrix[1][0]) * matrix[2][4] *
                              matrix[3][2] * matrix[4][1] +
                          mult_expr(matrix[0][3], matrix[1][1]) * matrix[2][0] *
                              matrix[3][2] * matrix[4][4] -
                          mult_expr(matrix[0][3], matrix[1][1]) * matrix[2][0] *
                              matrix[3][4] * matrix[4][2] -
                          mult_expr(matrix[0][3], matrix[1][1]) * matrix[2][2] *
                              matrix[3][0] * matrix[4][4] +
                          mult_expr(matrix[0][3], matrix[1][1]) * matrix[2][2] *
                              matrix[3][4] * matrix[4][0] +
                          mult_expr(matrix[0][3], matrix[1][1]) * matrix[2][4] *
                              matrix[3][0] * matrix[4][2] -
                          mult_expr(matrix[0][3], matrix[1][1]) * matrix[2][4] *
                              matrix[3][2] * matrix[4][0] -
                          mult_expr(matrix[0][3], matrix[1][2]) * matrix[2][0] *
                              matrix[3][1] * matrix[4][4] +
                          mult_expr(matrix[0][3], matrix[1][2]) * matrix[2][0] *
                              matrix[3][4] * matrix[4][1] +
                          mult_expr(matrix[0][3], matrix[1][2]) * matrix[2][1] *
                              matrix[3][0] * matrix[4][4] -
                          mult_expr(matrix[0][3], matrix[1][2]) * matrix[2][1] *
                              matrix[3][4] * matrix[4][0] -
                          mult_expr(matrix[0][3], matrix[1][2]) * matrix[2][4] *
                              matrix[3][0] * matrix[4][1] +
                          mult_expr(matrix[0][3], matrix[1][2]) * matrix[2][4] *
                              matrix[3][1] * matrix[4][0] +
                          mult_expr(matrix[0][3], matrix[1][4]) * matrix[2][0] *
                              matrix[3][1] * matrix[4][2] -
                          mult_expr(matrix[0][3], matrix[1][4]) * matrix[2][0] *
                              matrix[3][2] * matrix[4][1] -
                          mult_expr(matrix[0][3], matrix[1][4]) * matrix[2][1] *
                              matrix[3][0] * matrix[4][2] +
                          mult_expr(matrix[0][3], matrix[1][4]) * matrix[2][1] *
                              matrix[3][2] * matrix[4][0] +
                          mult_expr(matrix[0][3], matrix[1][4]) * matrix[2][2] *
                              matrix[3][0] * matrix[4][1] -
                          mult_expr(matrix[0][3], matrix[1][4]) * matrix[2][2] *
                              matrix[3][1] * matrix[4][0] +
                          mult_expr(matrix[0][4], matrix[1][0]) * matrix[2][1] *
                              matrix[3][2] * matrix[4][3] -
                          mult_expr(matrix[0][4], matrix[1][0]) * matrix[2][1] *
                              matrix[3][3] * matrix[4][2] -
                          mult_expr(matrix[0][4], matrix[1][0]) * matrix[2][2] *
                              matrix[3][1] * matrix[4][3] +
                          mult_expr(matrix[0][4], matrix[1][0]) * matrix[2][2] *
                              matrix[3][3] * matrix[4][1] +
                          mult_expr(matrix[0][4], matrix[1][0]) * matrix[2][3] *
                              matrix[3][1] * matrix[4][2] -
                          mult_expr(matrix[0][4], matrix[1][0]) * matrix[2][3] *
                              matrix[3][2] * matrix[4][1] -
                          mult_expr(matrix[0][4], matrix[1][1]) * matrix[2][0] *
                              matrix[3][2] * matrix[4][3] +
                          mult_expr(matrix[0][4], matrix[1][1]) * matrix[2][0] *
                              matrix[3][3] * matrix[4][2] +
                          mult_expr(matrix[0][4], matrix[1][1]) * matrix[2][2] *
                              matrix[3][0] * matrix[4][3] -
                          mult_expr(matrix[0][4], matrix[1][1]) * matrix[2][2] *
                              matrix[3][3] * matrix[4][0] -
                          mult_expr(matrix[0][4], matrix[1][1]) * matrix[2][3] *
                              matrix[3][0] * matrix[4][2] +
                          mult_expr(matrix[0][4], matrix[1][1]) * matrix[2][3] *
                              matrix[3][2] * matrix[4][0] +
                          mult_expr(matrix[0][4], matrix[1][2]) * matrix[2][0] *
                              matrix[3][1] * matrix[4][3] -
                          mult_expr(matrix[0][4], matrix[1][2]) * matrix[2][0] *
                              matrix[3][3] * matrix[4][1] -
                          mult_expr(matrix[0][4], matrix[1][2]) * matrix[2][1] *
                              matrix[3][0] * matrix[4][3] +
                          mult_expr(matrix[0][4], matrix[1][2]) * matrix[2][1] *
                              matrix[3][3] * matrix[4][0] +
                          mult_expr(matrix[0][4], matrix[1][2]) * matrix[2][3] *
                              matrix[3][0] * matrix[4][1] -
                          mult_expr(matrix[0][4], matrix[1][2]) * matrix[2][3] *
                              matrix[3][1] * matrix[4][0] -
                          mult_expr(matrix[0][4], matrix[1][3]) * matrix[2][0] *
                              matrix[3][1] * matrix[4][2] +
                          mult_expr(matrix[0][4], matrix[1][3]) * matrix[2][0] *
                              matrix[3][2] * matrix[4][1] +
                          mult_expr(matrix[0][4], matrix[1][3]) * matrix[2][1] *
                              matrix[3][0] * matrix[4][2] -
                          mult_expr(matrix[0][4], matrix[1][3]) * matrix[2][1] *
                              matrix[3][2] * matrix[4][0] -
                          mult_expr(matrix[0][4], matrix[1][3]) * matrix[2][2] *
                              matrix[3][0] * matrix[4][1] +
                          mult_expr(matrix[0][4], matrix[1][3]) * matrix[2][2] *
                              matrix[3][1] * matrix[4][0];
    const auto generated_det = determinant(matrix);
    REQUIRE(exactfp_eval<double>(generated_det - det_expr) == 0.0);
  }
}
